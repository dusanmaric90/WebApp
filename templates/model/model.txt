package model;
		
import java.io.Serializable;
import javax.persistence.*;
import java.util.*;
import javax.validation.constraints.*;


{% if abstract == False  %}
@Entity
public class {{nameClass}}{% if superClass  %} extends {{parentClass}}{% endif %} implements Serializable{
{% elif abstract == True  %}
@Entity
@Inheritance(strategy=InheritanceType.TABLE_PER_CLASS)
public class {{nameClass}}{% if superClass  %} extends {{parentClass}}{% endif %} implements Serializable{
{% endif %}


{% if superClass == False and abstract == False %}
@Id
@GeneratedValue(strategy=GenerationType.IDENTITY)
protected Integer id;
{% elif superClass == False and abstract == True %}
@Id
@GeneratedValue(strategy=GenerationType.TABLE)
protected Integer id;
{% endif %}

{% for attribute in attributes %}

{% if attribute["many_to_one"] is defined and attribute["many_to_one"] == "true" %}
@ManyToOne
@JoinColumn
protected {{ attribute["type"] }}  {{ attribute["name"] }};	
{% elif attribute["one_to_many"] is defined and attribute["one_to_many"] == "true" %}
@OneToMany(mappedBy="{{nameClass.lower()}}", fetch=FetchType.EAGER)
protected Set<{{ attribute["type"] }}> {{ attribute["name"] }} = new HashSet<{{ attribute["type"] }}>();
{% else %}
{% if attribute["type"] is defined and attribute["type"] == "Date" -%}@Temporal(TemporalType.DATE){%- endif %}
{% if attribute["enum"] is defined and attribute["enum"] == "true" -%}@Enumerated(EnumType.STRING){%- endif %}
{% if attribute["min_length"] is defined and  attribute["max_length"] is defined -%}@Size(min = {{attribute["min_length"]}}, max = {{attribute["max_length"]}}){%- endif %}
{% if (attribute["unique"] is defined and attribute["unique"] == "true") or (attribute["required"] is defined and attribute["required"] == "true") -%}
@Column({% if attribute["unique"] is defined and attribute["unique"] == "true" %}unique = true{% endif %}{% if (attribute["unique"] is defined and attribute["unique"] == "true") and (attribute["required"] is defined and attribute["required"] == "true") %}, {% endif %}{% if attribute["required"] is defined and attribute["required"] == "true" %}nullable = false{% endif %})
{%- endif %}
protected {{ attribute["type"] }}  {{ attribute["name"] }};	
{% endif %}


	
{% endfor %}
{% if superClass == False  %}
public Integer getId() {
	return id;
}

public void setId(Integer id) {
	this.id = id;
}
{% endif %}
{% for attribute in attributes %}
{% if attribute["one_to_many"] is not defined  %}
public {{ attribute["type"] }} get{{ attribute["name"].capitalize() }}() {
	return {{ attribute["name"] }};
}
		
public void set{{ attribute["name"].capitalize() }}({{ attribute["type"] }} {{ attribute["name"] }}) {
	this.{{ attribute["name"] }} = {{ attribute["name"] }};
}
{% endif %}		
{% endfor %}
{% if superClass == True  %}
@Override
public String toString() {
	return super.toString();
} 
{% else %}
@Override
public String toString() {
	return "" + 
{% for attribute in attributes %}
{% if attribute["show"] is defined and attribute["show"] == "true" -%}{{attribute["name"]}}+ " " +{%- endif %}
{% endfor %}
	" ";}
{% endif %}



}
